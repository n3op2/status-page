version: '3.7'
networks:
  chain:
    ipam:
      driver: default
  ipfs:
    ipam:
      driver: default
  member-a:
    ipam:
      driver: default
  member-b:
    ipam:
      driver: default
  optimiser:
    ipam:
      driver: default

services:
  kener:
    container_name: sqnc-kener-rc
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      postgres-veritable-ui-alice:
        condition: service_started
      veritable-cloudagent-alice:
        condition: service_healthy
    scale: 1
    command: >
      sh -c "
        npm run dev"
    # env_file:
    #   - .env
    environment:
      - TZ=Etc/GMT
      #- GH_TOKEN=
      #- API_TOKEN=
      #- API_IP=
      #- API_IP_REGEX=
      #- KENER_BASE_PATH=

      # If running on a LINUX HOST and not podman rootless these MUST BE SET
      # run "id $user" from command line and replace numbers below with output from command
      #- PUID=1000 # gid
      #- PGID=1000 # uid

      ### Most likely DO NOT need to change anything below this ###

      #- PORT=3000 Port app listens on IN CONTAINER
    ports:
      - '3010:3000/tcp'
    volumes:
      - './database:/app/database:rw'
      - './config:/app/config'

  member-a-postgres-matchmaker-api:
    image: postgres:17.1-alpine
    container_name: member-a-postgres-matchmaker-api
    ports:
      - 5432:5432
    volumes:
      - member-a-matchmaker-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-matchmaker-api
    networks: ['member-a']

  member-a-postgres-identity:
    image: postgres:17.1-alpine
    container_name: member-a-postgres-identity
    ports:
      - 5433:5432
    volumes:
      - member-a-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-identity
    networks: ['member-a']

  member-a-identity:
    image: digicatapult/sqnc-identity-service:latest
    container_name: member-a-identity
    command: /bin/sh -c "
      sleep 10 &&
      npm run db:migrate &&
      npm start"
    ports:
      - 9000:9000
    depends_on:
      - member-a-node
      - member-a-postgres-identity
    environment:
      - PORT=9000
      - API_HOST=member-a-node
      - API_PORT=9944
      - DB_HOST=member-a-postgres-identity
      - DB_PORT=5432
      - DB_NAME=sqnc-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_URL_PREFIX=http://localhost:3080/realms/member-a/protocol/openid-connect
      - IDP_INTERNAL_URL_PREFIX=http://keycloak:8080/realms/member-a/protocol/openid-connect
    networks: ['member-a']

  member-a-node:
    image: digicatapult/sqnc-node:latest
    container_name: member-a-node
    command: --base-path /data
      --alice
      --unsafe-rpc-external
      --rpc-cors all
      --node-key 0000000000000000000000000000000000000000000000000000000000000001
    ports:
      - 30333:30333
      - 9944:9944
      - 9933:9933
    restart: on-failure
    networks: ['member-a', 'chain']

  member-a-matchmaker-api:
    container_name: member-a-matchmaker-api
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "
      sleep 10 &&
      npx knex migrate:latest --knexfile build/lib/db/knexfile &&
      npx @digicatapult/sqnc-process-management@latest create -h member-a-node -p 9944 -u //Alice -f processFlows.json &&
      npm start"
    environment:
      - PORT=8000
      - NODE_HOST=member-a-node
      - NODE_PORT=9944
      - DB_HOST=member-a-postgres-matchmaker-api
      - DB_PORT=5432
      - DB_NAME=sqnc-matchmaker-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=member-a-identity
      - IDENTITY_SERVICE_PORT=9000
      - IPFS_HOST=ipfs
      - IPFS_PORT=5001
      - USER_URI=//Alice
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_URL_PREFIX=http://localhost:3080/realms/member-a/protocol/openid-connect
      - IDP_INTERNAL_URL_PREFIX=http://keycloak:8080/realms/member-a/protocol/openid-connect
    ports:
      - 8000:8000
    depends_on:
      - member-a-node
      - member-a-identity
      - member-a-postgres-matchmaker-api
      - ipfs
    restart: on-failure
    networks: ['member-a', 'ipfs']

  # -------------------------------------------------------------------- member-b
  member-b-postgres-matchmaker-api:
    image: postgres:17.1-alpine
    container_name: member-b-postgres-matchmaker-api
    ports:
      - 5442:5432
    volumes:
      - member-b-matchmaker-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-matchmaker-api
    networks: ['member-b']

  member-b-postgres-identity:
    image: postgres:17.1-alpine
    container_name: member-b-postgres-identity
    ports:
      - 5443:5432
    volumes:
      - member-b-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-identity
    networks: ['member-b']

  member-b-identity:
    image: digicatapult/sqnc-identity-service:latest
    container_name: member-b-identity
    command: /bin/sh -c "
      sleep 10 &&
      npm run db:migrate &&
      npm start"
    ports:
      - 9010:9010
    depends_on:
      - member-b-node
      - member-b-postgres-identity
    environment:
      - PORT=9010
      - API_HOST=member-b-node
      - API_PORT=9944
      - DB_HOST=member-b-postgres-identity
      - DB_PORT=5432
      - DB_NAME=sqnc-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_URL_PREFIX=http://localhost:3080/realms/member-b/protocol/openid-connect
      - IDP_INTERNAL_URL_PREFIX=http://keycloak:8080/realms/member-b/protocol/openid-connect
    networks: ['member-b']

  member-b-node:
    image: digicatapult/sqnc-node:latest
    container_name: member-b-node
    command: --base-path /data/
      --bob
      --unsafe-rpc-external
      --rpc-cors all
      --node-key 0000000000000000000000000000000000000000000000000000000000000002
      --bootnodes /dns4/alice/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
    ports:
      - 31333:30333
      - 10044:9944
      - 10033:9933
    restart: on-failure
    networks: ['member-b', 'chain']

  member-b-matchmaker-api:
    container_name: member-b-matchmaker-api
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "
      sleep 10 &&
      npx knex migrate:latest --knexfile build/lib/db/knexfile &&
      npm start"
    environment:
      - PORT=8010
      - NODE_HOST=member-b-node
      - NODE_PORT=9944
      - DB_HOST=member-b-postgres-matchmaker-api
      - DB_PORT=5432
      - DB_NAME=sqnc-matchmaker-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=member-b-identity
      - IDENTITY_SERVICE_PORT=9010
      - IPFS_HOST=ipfs
      - IPFS_PORT=5001
      - USER_URI=//Bob
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_URL_PREFIX=http://localhost:3080/realms/member-b/protocol/openid-connect
      - IDP_INTERNAL_URL_PREFIX=http://keycloak:8080/realms/member-b/protocol/openid-connect
    ports:
      - 8010:8010
    depends_on:
      - member-b-node
      - member-b-identity
      - member-b-postgres-matchmaker-api
      - ipfs
    restart: on-failure
    networks: ['member-b', 'ipfs']

  # ------------------------------------------------------------------- optimiser

  optimiser-postgres-matchmaker-api:
    image: postgres:17.1-alpine
    container_name: optimiser-postgres-matchmaker-api
    ports:
      - 5452:5432
    volumes:
      - optimiser-matchmaker-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-matchmaker-api
    networks: ['optimiser']

  optimiser-postgres-identity:
    image: postgres:17.1-alpine
    container_name: optimiser-postgres-identity
    ports:
      - 5453:5432
    volumes:
      - optimiser-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-identity
    networks: ['optimiser']

  optimiser-identity:
    image: digicatapult/sqnc-identity-service:latest
    container_name: optimiser-identity
    command: /bin/sh -c "
      sleep 10 &&
      npm run db:migrate &&
      npm start"
    ports:
      - 9020:9020
    depends_on:
      - optimiser-node
      - optimiser-postgres-identity
    environment:
      - PORT=9020
      - API_HOST=optimiser-node
      - API_PORT=9944
      - DB_HOST=optimiser-postgres-identity
      - DB_PORT=5432
      - DB_NAME=sqnc-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5FLSigC9HGRKVhB9FiEo4Y3koPsNmBmLJbpXg2mp1hXcS59Y
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_URL_PREFIX=http://localhost:3080/realms/optimiser/protocol/openid-connect
      - IDP_INTERNAL_URL_PREFIX=http://keycloak:8080/realms/optimiser/protocol/openid-connect
    networks: ['optimiser']
  optimiser-node:
    image: digicatapult/sqnc-node:latest
    container_name: optimiser-node
    command: --base-path /data/
      --charlie
      --unsafe-rpc-external
      --rpc-cors all
      --node-key 0000000000000000000000000000000000000000000000000000000000000003
      --bootnodes /dns4/alice/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
    ports:
      - 32333:30333
      - 10144:9944
      - 10133:9933
    restart: on-failure
    networks: ['optimiser', 'chain']

  optimiser-matchmaker-api:
    container_name: optimiser-matchmaker-api
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "
      sleep 10 &&
      npx knex migrate:latest --knexfile build/lib/db/knexfile &&
      npm start"
    environment:
      - PORT=8020
      - NODE_HOST=optimiser-node
      - NODE_PORT=9944
      - DB_HOST=optimiser-postgres-matchmaker-api
      - DB_PORT=5432
      - DB_NAME=sqnc-matchmaker-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=optimiser-identity
      - IDENTITY_SERVICE_PORT=9020
      - IPFS_HOST=ipfs
      - IPFS_PORT=5001
      - USER_URI=//Charlie
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_URL_PREFIX=http://localhost:3080/realms/optimiser/protocol/openid-connect
      - IDP_INTERNAL_URL_PREFIX=http://keycloak:8080/realms/optimiser/protocol/openid-connect
    ports:
      - 8020:8020
    depends_on:
      - optimiser-node
      - optimiser-identity
      - optimiser-postgres-matchmaker-api
      - ipfs
    restart: on-failure
    networks: ['optimiser', 'ipfs']

  # ------------------------------------------------------------------------ ipfs
  ipfs:
    image: ipfs/go-ipfs:v0.32.1
    container_name: ipfs
    environment:
      - |
        IPFS_SWARM_KEY=/key/swarm/psk/1.0.0/
        /base16/
        0000000000000000000000000000000000000000000000000000000000000000
    ports:
      - 4001:4001
      - 8080:8080
      - 5001:5001
    networks: ['ipfs']
    volumes:
      - ipfs:/data/ipfs

  # ------------------------------------------------------------------------ keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.6
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - 3080:8080
    volumes:
      - ./docker/keycloak:/opt/keycloak/data/import
    command: start-dev --import-realm
    networks: ['member-a', 'member-b', 'optimiser']

volumes:
  member-a-matchmaker-api-storage:
  member-a-identity-storage:
  member-b-matchmaker-api-storage:
  member-b-identity-storage:
  optimiser-matchmaker-api-storage:
  optimiser-identity-storage:
  ipfs:


