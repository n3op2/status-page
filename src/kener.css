/*one is the class for dotted background*/

.dots-pattern {
	position: absolute;
	top: 0px;
	left: 0;
	width: 100%;
	z-index: 0;
	background-repeat: no-repeat;
	background-size: 100%;
	height: 100svh;
	background: linear-gradient(177deg, rgba(255, 137, 131, 0.5) 0%, rgba(35, 136, 224, 0.05) 60%);
	clip-path: polygon(0 0, 100% 0, 100% 54%, 0% 100%);
}

.dots-pattern::after {
	content: "";
	position: absolute;
	background-image: radial-gradient(rgba(0, 0, 0, 0) 1.5px, var(--background-kener) 1px);
	background-size: 14px 14px;
	width: 100%;
	height: 100vh;
	top: 0;
	transform: blur(3px);
	left: 0;
}

.squares-pattern {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	z-index: 0;
	background-repeat: no-repeat;
	background-size: 100%;
	height: 100svh;

	clip-path: polygon(0 0, 100% 0, 100% 54%, 0% 100%);
	transform: blur(3px);
}

.squares-pattern::after {
	content: "";
	position: absolute;
	background-image: linear-gradient(#444cf7 1px, transparent 1px),
		linear-gradient(to right, #444cf7 1px, var(--background-kener) 1px);
	-webkit-mask-image: linear-gradient(
		to bottom,
		rgba(0, 0, 0, 1) 0%,
		rgba(0, 0, 0, 0.8) 20%,
		rgba(0, 0, 0, 0.6) 40%,
		rgba(0, 0, 0, 0.4) 60%,
		rgba(0, 0, 0, 0.2) 80%,
		rgba(0, 0, 0, 0) 100%
	);
	mask-image: linear-gradient(
		180deg,
		rgba(0, 0, 0, 0.2) 0%,
		rgba(0, 0, 0, 0.1) 20%,
		rgba(0, 0, 0, 0.05) 40%,
		rgba(0, 0, 0, 0.025) 60%,
		rgba(0, 0, 0, 0.0125) 80%,
		rgba(0, 0, 0, 0) 100%
	);
	background-size: 32px 32px;
	width: 100%;
	height: 100vh;
	top: 0;

	left: 0;
}
.dark .squares-pattern::after {
	background-image: linear-gradient(#677489 1px, transparent 1px),
		linear-gradient(to right, #677489 1px, var(--background-kener) 1px);
}

/*Needed to overlay content on top of dotted bg*/
section {
	position: relative;
	z-index: 1;
}
/*Needed overlay content on top of dotted bg*/
.blurry-bg {
	background-color: var(--background-kener-rgba);
	box-shadow: 0 0 64px 64px var(--background-kener-rgba);
}

/*Colors for something UP*/
.bg-api-up {
	background-color: #00dfa2;
}
.text-api-up {
	color: #0aca97;
}
/*Colors for something DOWN*/
.bg-api-down {
	background-color: #ff0060;
}
.text-api-down {
	color: #ff0060;
}
/*Colors for something Not there*/
.bg-api-nodata {
	background-color: #f1f5f8;
}
.text-api-nodata {
	color: #b8bcbe;
}
.dark .bg-api-nodata {
	background-color: rgba(100, 100, 100, 0.4);
}

/*Colors for something degraded*/
.bg-api-degraded {
	background-color: #ffb84c;
}
.text-api-degraded {
	color: #ffb84c;
}

/*Needed to show markdown properly*/
.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::before {
	content: "";
}
.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
	content: "";
}

/*Needed to show monitor stacked properly*/
.monitors-card .monitor {
	padding: 1.2em 3.4em 0.875em 3.4em;
	border-bottom: 1px solid;
	border-color: hsl(var(--border) / var(--tw-border-opacity));
}
.monitors-card .monitor:last-child {
	border-bottom: none;
}
.monitors-card.embed .monitor {
	padding: 0em 0.87em 0.875em 0.87em;
	border-bottom: none;
}

/*Tag Color*/
.tag-maintenance {
	background-color: #a076f9;
	color: #09090b;
}
.tag-resolved {
	background-color: #2cd3e1;
	color: #09090b;
}
.tag-indetified {
	background-color: #feffac;
	color: #09090b;
}
